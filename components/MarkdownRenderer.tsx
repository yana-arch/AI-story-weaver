import React, { useMemo } from 'react';
import MarkdownIt from 'markdown-it';

interface MarkdownRendererProps {
    content: string;
}

// Initialize markdown-it with sensible defaults for this application
const md = new MarkdownIt({
  html: false, // Disallow HTML tags in the input for security
  xhtmlOut: false, // Don't create XHTML-compliant tags
  breaks: true, // Convert '\n' in paragraphs into <br>
  langPrefix: 'language-', // CSS language prefix for fenced blocks
  linkify: true, // Autoconvert URL-like text to links
  typographer: true, // Enable smartquotes and other typographic replacements
});

/**
 * Renders markdown content to HTML using the 'markdown-it' library.
 * It's configured to be safe and provide a good user experience with features
 * like linkification and typography improvements.
 */
export const MarkdownRenderer: React.FC<MarkdownRendererProps> = ({ content }) => {
    const renderedHtml = useMemo(() => {
        if (!content) {
            return { __html: '' };
        }
        return { __html: md.render(content) };
    }, [content]);

    // dangerouslySetInnerHTML is used here to render the HTML string generated by markdown-it.
    // This is safe because markdown-it sanitizes the input and the 'html' option is disabled.
    // The parent component in App.tsx provides Tailwind's 'prose' classes for styling.
    return <div dangerouslySetInnerHTML={renderedHtml} />;
};
