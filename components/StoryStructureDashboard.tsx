import React, { useMemo } from 'react';
import { Story } from '../types';
import { getAnalyticsService, StoryStructureAnalytics } from '../services/analyticsService';

interface StoryStructureDashboardProps {
  story?: Story;
  className?: string;
}

export const StoryStructureDashboard: React.FC<StoryStructureDashboardProps> = ({
  story,
  className = ''
}) => {
  const analyticsService = getAnalyticsService();

  const structureAnalytics: StoryStructureAnalytics = useMemo(() => {
    if (!story) return {
      chapterCount: 0,
      sceneCount: 0,
      actStructure: { act1Percentage: 0, act2Percentage: 0, act3Percentage: 0 },
      tensionCurve: [],
      pacingMetrics: { slowSections: 0, mediumSections: 0, fastSections: 0 },
      characterPresence: {}
    };
    return analyticsService.getStoryStructureAnalytics(story);
  }, [story, analyticsService]);

  if (!story) {
    return (
      <div className={`text-center py-12 ${className}`}>
        <div className="text-6xl mb-4">üìä</div>
        <h3 className="text-lg font-medium text-muted-foreground mb-2">
          Ch∆∞a c√≥ d·ªØ li·ªáu c·∫•u tr√∫c c√¢u chuy·ªán
        </h3>
        <p className="text-sm text-muted-foreground max-w-md mx-auto">
          B·∫Øt ƒë·∫ßu vi·∫øt truy·ªán ƒë·ªÉ xem ph√¢n t√≠ch c·∫•u tr√∫c v√† nh·ªãp ƒë·ªô c√¢u chuy·ªán.
        </p>
      </div>
    );
  }

  const totalScenes = structureAnalytics.pacingMetrics.slowSections + structureAnalytics.pacingMetrics.mediumSections + structureAnalytics.pacingMetrics.fastSections;
  const slowPercentage = totalScenes > 0 ? Math.round((structureAnalytics.pacingMetrics.slowSections / totalScenes) * 100) : 0;
  const mediumPercentage = totalScenes > 0 ? Math.round((structureAnalytics.pacingMetrics.mediumSections / totalScenes) * 100) : 0;
  const fastPercentage = totalScenes > 0 ? Math.round((structureAnalytics.pacingMetrics.fastSections / totalScenes) * 100) : 0;

  return (
    <div className={`space-y-6 ${className}`}>
      <div className="text-center">
        <h2 className="text-2xl font-bold text-foreground mb-2">
          C·∫•u tr√∫c c√¢u chuy·ªán
        </h2>
        <p className="text-muted-foreground">
          Ph√¢n t√≠ch c·∫•u tr√∫c, nh·ªãp ƒë·ªô v√† s·ª± ph√°t tri·ªÉn c·ªßa c√¢u chuy·ªán
        </p>
      </div>

      {/* Basic Structure Stats */}
      <div className="grid grid-cols-2 md:grid-cols-4 gap-4">
        <div className="bg-card rounded-lg p-4 border text-center hover:shadow-md transition-shadow">
          <div className="text-3xl mb-2">üìñ</div>
          <div className="text-2xl font-bold text-primary">{structureAnalytics.chapterCount}</div>
          <div className="text-sm text-muted-foreground">Ch∆∞∆°ng</div>
        </div>

        <div className="bg-card rounded-lg p-4 border text-center hover:shadow-md transition-shadow">
          <div className="text-3xl mb-2">üé≠</div>
          <div className="text-2xl font-bold text-blue-600">{structureAnalytics.sceneCount}</div>
          <div className="text-sm text-muted-foreground">C·∫£nh</div>
        </div>

        <div className="bg-card rounded-lg p-4 border text-center hover:shadow-md transition-shadow">
          <div className="text-3xl mb-2">üìà</div>
          <div className="text-2xl font-bold text-green-600">{Math.round(structureAnalytics.tensionCurve.length / 10)}</div>
          <div className="text-sm text-muted-foreground">ƒêi·ªÉm cao tr√†o</div>
        </div>

        <div className="bg-card rounded-lg p-4 border text-center hover:shadow-md transition-shadow">
          <div className="text-3xl mb-2">‚è±Ô∏è</div>
          <div className="text-2xl font-bold text-purple-600">{totalScenes}</div>
          <div className="text-sm text-muted-foreground">ƒêo·∫°n vƒÉn</div>
        </div>
      </div>

      {/* Act Structure */}
      <div className="bg-card rounded-lg p-6 border">
        <h3 className="font-semibold text-foreground mb-4 flex items-center gap-2">
          <span className="text-lg">üé¨</span>
          C·∫•u tr√∫c h·ªìi (3 h·ªìi kinh ƒëi·ªÉn)
        </h3>

        <div className="space-y-4">
          <div className="flex items-center gap-4">
            <div className="min-w-0 flex-shrink-0 w-20">
              <span className="text-sm font-medium text-blue-600">H·ªìi 1: Setup</span>
            </div>
            <div className="flex-1">
              <div className="flex items-center gap-2">
                <div className="flex-1 bg-muted rounded-full h-4 overflow-hidden">
                  <div
                    className="bg-blue-500 h-full rounded-full transition-all duration-500"
                    style={{ width: `${structureAnalytics.actStructure.act1Percentage}%` }}
                  />
                </div>
                <span className="text-sm font-medium min-w-[3rem] text-right text-blue-600">
                  {structureAnalytics.actStructure.act1Percentage}%
                </span>
              </div>
              <p className="text-xs text-muted-foreground mt-1">
                Gi·ªõi thi·ªáu nh√¢n v·∫≠t, b·ªëi c·∫£nh v√† xung ƒë·ªôt ban ƒë·∫ßu
              </p>
            </div>
          </div>

          <div className="flex items-center gap-4">
            <div className="min-w-0 flex-shrink-0 w-20">
              <span className="text-sm font-medium text-orange-600">H·ªìi 2: Confrontation</span>
            </div>
            <div className="flex-1">
              <div className="flex items-center gap-2">
                <div className="flex-1 bg-muted rounded-full h-4 overflow-hidden">
                  <div
                    className="bg-orange-500 h-full rounded-full transition-all duration-500"
                    style={{ width: `${structureAnalytics.actStructure.act2Percentage}%` }}
                  />
                </div>
                <span className="text-sm font-medium min-w-[3rem] text-right text-orange-600">
                  {structureAnalytics.actStructure.act2Percentage}%
                </span>
              </div>
              <p className="text-xs text-muted-foreground mt-1">
                Ph√°t tri·ªÉn xung ƒë·ªôt, th·ª≠ th√°ch v√† ph√°t tri·ªÉn nh√¢n v·∫≠t
              </p>
            </div>
          </div>

          <div className="flex items-center gap-4">
            <div className="min-w-0 flex-shrink-0 w-20">
              <span className="text-sm font-medium text-green-600">H·ªìi 3: Resolution</span>
            </div>
            <div className="flex-1">
              <div className="flex items-center gap-2">
                <div className="flex-1 bg-muted rounded-full h-4 overflow-hidden">
                  <div
                    className="bg-green-500 h-full rounded-full transition-all duration-500"
                    style={{ width: `${structureAnalytics.actStructure.act3Percentage}%` }}
                  />
                </div>
                <span className="text-sm font-medium min-w-[3rem] text-right text-green-600">
                  {structureAnalytics.actStructure.act3Percentage}%
                </span>
              </div>
              <p className="text-xs text-muted-foreground mt-1">
                ƒê·ªânh ƒëi·ªÉm v√† gi·∫£i quy·∫øt xung ƒë·ªôt
              </p>
            </div>
          </div>
        </div>
      </div>

      {/* Pacing Analysis */}
      <div className="bg-card rounded-lg p-6 border">
        <h3 className="font-semibold text-foreground mb-4 flex items-center gap-2">
          <span className="text-lg">‚ö°</span>
          Ph√¢n t√≠ch nh·ªãp ƒë·ªô
        </h3>

        <div className="space-y-4">
          <div className="grid grid-cols-1 md:grid-cols-3 gap-4">
            <div className="text-center">
              <div className="text-3xl mb-2 text-blue-500">üêå</div>
              <div className="text-2xl font-bold text-blue-600">{slowPercentage}%</div>
              <div className="text-sm text-muted-foreground">Ch·∫≠m ({structureAnalytics.pacingMetrics.slowSections})</div>
              <p className="text-xs text-muted-foreground mt-1">
                M√¥ t·∫£ chi ti·∫øt, x√¢y d·ª±ng kh√¥ng kh√≠
              </p>
            </div>

            <div className="text-center">
              <div className="text-3xl mb-2 text-yellow-500">üèÉ</div>
              <div className="text-2xl font-bold text-yellow-600">{mediumPercentage}%</div>
              <div className="text-sm text-muted-foreground">Trung b√¨nh ({structureAnalytics.pacingMetrics.mediumSections})</div>
              <p className="text-xs text-muted-foreground mt-1">
                C√¢n b·∫±ng h√†nh ƒë·ªông v√† c·∫£m x√∫c
              </p>
            </div>

            <div className="text-center">
              <div className="text-3xl mb-2 text-red-500">üöÄ</div>
              <div className="text-2xl font-bold text-red-600">{fastPercentage}%</div>
              <div className="text-sm text-muted-foreground">Nhanh ({structureAnalytics.pacingMetrics.fastSections})</div>
              <p className="text-xs text-muted-foreground mt-1">
                H√†nh ƒë·ªông d·ªìn d·∫≠p, k·ªãch t√≠nh cao
              </p>
            </div>
          </div>

          {totalScenes > 0 && (
            <div className="mt-6 pt-4 border-t">
              <div className="flex items-center justify-center gap-1 text-sm text-muted-foreground">
                <span>Nh·ªãp ƒë·ªô l√Ω t∆∞·ªüng cho th·ªÉ lo·∫°i n√†y:</span>
                <span className="font-medium text-foreground">
                  {slowPercentage > 40 ? 'T·∫°p vƒÉn' : mediumPercentage > 50 ? 'VƒÉn xu√¥i hi·ªán ƒë·∫°i' : 'Ti·ªÉu thuy·∫øt phi√™u l∆∞u'}
                </span>
              </div>
            </div>
          )}
        </div>
      </div>

      {/* Tension Curve */}
      {structureAnalytics.tensionCurve.length > 0 && (
        <div className="bg-card rounded-lg p-6 border">
          <h3 className="font-semibold text-foreground mb-4 flex items-center gap-2">
            <span className="text-lg">üìä</span>
            ƒê·ªì th·ªã cƒÉng th·∫≥ng
          </h3>

          <div className="h-32 flex items-end gap-1">
            {structureAnalytics.tensionCurve.slice(0, 50).map((point, index) => (
              <div
                key={index}
                className="bg-gradient-to-t from-red-400 to-yellow-400 rounded-sm flex-1 min-w-[2px] transition-all hover:opacity-80"
                style={{
                  height: `${Math.max(3, point.tension)}%`,
                  opacity: point.tension / 10 + 0.3
                }}
                title={`V·ªã tr√≠: ${point.position.toFixed(1)}% - CƒÉng th·∫≥ng: ${point.tension.toFixed(1)}`}
              />
            ))}
          </div>

          <div className="flex justify-between mt-2 text-xs text-muted-foreground">
            <span>B·∫Øt ƒë·∫ßu</span>
            <span>...</span>
            <span>K·∫øt th√∫c</span>
          </div>

          <div className="mt-4 pt-4 border-t">
            <p className="text-xs text-muted-foreground text-center">
              ƒê∆∞·ªùng cong cƒÉng th·∫≥ng d·ª±a tr√™n ph√¢n t√≠ch n·ªôi dung c√¢u chuy·ªán
            </p>
          </div>
        </div>
      )}

      {/* Character Focus in Structure */}
      {Object.keys(structureAnalytics.characterPresence).length > 0 && (
        <div className="bg-card rounded-lg p-6 border">
          <h3 className="font-semibold text-foreground mb-4 flex items-center gap-2">
            <span className="text-lg">üéØ</span>
            S·ª± hi·ªán di·ªán nh√¢n v·∫≠t qua c√¢u chuy·ªán
          </h3>

          <div className="space-y-3">
            {Object.entries(structureAnalytics.characterPresence)
              .sort(([,a], [,b]) => b - a)
              .slice(0, 5)
              .map(([characterName, percentage]) => (
              <div key={characterName} className="flex items-center gap-3">
                <div className="min-w-0 flex-shrink-0 w-24">
                  <span className="text-sm font-medium text-foreground truncate">
                    {characterName}
                  </span>
                </div>

                <div className="flex-1">
                  <div className="flex items-center gap-2">
                    <div className="flex-1 bg-muted rounded-full h-2 overflow-hidden">
                      <div
                        className={`h-full rounded-full transition-all duration-500 ${
                          percentage > 30 ? 'bg-red-400' :
                          percentage > 15 ? 'bg-yellow-400' :
                          percentage > 5 ? 'bg-blue-400' : 'bg-gray-400'
                        }`}
                        style={{ width: `${percentage}%` }}
                      />
                    </div>
                    <span className="text-xs text-muted-foreground min-w-[3rem] text-right">
                      {percentage}%
                    </span>
                  </div>
                </div>
              </div>
            ))}
          </div>

          <div className="mt-4 pt-3 border-t">
            <div className="flex items-center justify-center gap-4 text-xs text-muted-foreground">
              <div className="flex items-center gap-1">
                <div className="w-2 h-2 bg-red-400 rounded"></div>
                <span>Nh√¢n v·∫≠t ch√≠nh</span>
              </div>
              <div className="flex items-center gap-1">
                <div className="w-2 h-2 bg-yellow-400 rounded"></div>
                <span>Nh√¢n v·∫≠t ph·ª•</span>
              </div>
              <div className="flex items-center gap-1">
                <div className="w-2 h-2 bg-blue-400 rounded"></div>
                <span>H·ªó tr·ª£</span>
              </div>
              <div className="flex items-center gap-1">
                <div className="w-2 h-2 bg-gray-400 rounded"></div>
                <span>Xu·∫•t hi·ªán √≠t</span>
              </div>
            </div>
          </div>
        </div>
      )}
    </div>
  );
};
